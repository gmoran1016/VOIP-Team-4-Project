from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from twilio.rest import Client
from gtts import gTTS

app = Flask(__name__)

"""
CURRENT STATUS:

Program is now working as intended. All that's left are a few tweaks and setting up a host environment for deployment.

TODO:
1. Fix format code so number can be entered in any format
2. Upload to cloud service for deployment - current plan is to use AWS
3. Make sure it can handle multiple users at once - should be possible once hosted on AWS
4. Figure out hosting solution for mp3 file generated by TTS - should be doable via AWS as well
"""

# Some Flask thing? IDK
@app.route("/sms", methods=['GET', 'POST'])
def bot():
    #Twilio Message Stuff
    incoming_msg = request.values.get('Body', '').lower()
    resp = MessagingResponse()
    msg = resp.message()
    
    #Convert number to correct format to pass to twilio
    
    #variable
    i = 0
    
    
    #Checks for the /s to start the program by asking for the number. Should increment through steps but currently doesnt
    if '/s' in incoming_msg:
        msg.body('Please enter a number in +15554443333 format:')
        print(resp)
    elif '+1' in incoming_msg or len(incoming_msg) == 10 :
        if len(incoming_msg) == 10:
            fixed = '+1'+incoming_msg
            print(fixed)
            storeNumber(fixed)
            msg.body('Please type /m then enter you message')
        else:    
            storeNumber(incoming_msg)
            msg.body('Please type /m then enter you message')
            
    elif '/m' in incoming_msg:
        storeMessage(incoming_msg)
        tts()      
    else:
        msg.body('Please Begin by sending /s')

    return str(resp)

def storeNumber(number):
    storeNumber.numberResp = "'"+number+"'"
    print(storeNumber.numberResp)

def storeMessage(message):
    if '/m' in message:
        print(message)
        storeMessage.messageResp = message[2:]
        print(storeMessage.messageResp)
    else:
        print('Error in message')
       
    
    
# Does the TTS Magic and saves as output.mp3 in root folder
def tts():
    language = 'en'

    output = gTTS(text=storeMessage.messageResp, lang=language, slow=False, tld='ie')
    output.save("files/output.mp3")
    print("TTS Success")
    call()


# Does the calling
def call():
    # Your Account Sid and Auth Token from twilio.com/console
    # and set the environment variables. See http://twil.io/secure
    account_sid = 'AC75647f28d69ea248afba7325fc554d01'
    auth_token = '0f7ca9a3e08adc10008de9151089f653'
    client = Client(account_sid, auth_token)
    print(storeNumber.numberResp)
    # makes sure number has US Code at beginning. Need to make this better in case of formatting issues
    #Redundant Currently
    if '+1' not in storeNumber.numberResp:
        storeNumber.numberResp = "+1" + storeNumber.numberResp
    # Creates the call client and twiml needed to call via Twilio
    print('call time'+' '+storeNumber.numberResp+' '+storeMessage.messageResp)
    call = client.calls.create(
        twiml='<Response>'
              '<Play>http://voipfile.luthien.me:8080/output.mp3</Play>'
              '</Response>',
        to=storeNumber.numberResp,
        from_='+18283927597'
    )

    print(call.sid)


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8008, debug=False)
